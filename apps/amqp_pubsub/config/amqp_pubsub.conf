# Log level
logger.level = debug

# Path to Google service account JSON file.  Not used if oauth_jwt.use_default_service_account = true
oauth_jwt.secrets_file = "client_secrets.json"

# Use the default service account from metadata server if available (when running on GCE).
oauth_jwt.use_default_service_account = true

# AMQP exchange that the MQTT plugin is configured to use.
amqp_pubsub.ampq_exchange = "amq.topic"

# Project prefix for topics and subscriptions. Currently of the form projects/{project-id}/
amqp_pubsub.pubsub_project_prefix = "projects/your-gcp-project/"

# Disables creation of queues in RabbitMQ for the proxied routes.
amqp_pubsub.disable_queue_creation = false

# RabbitMQ host.
amqp_pubsub.ampq_conn_options.host = "localhost"

# RabbitMQ connection port.
amqp_pubsub.ampq_conn_options.port = 5672

# RabbitMQ username.
amqp_pubsub.ampq_conn_options.username = "test"

# RabbitMQ password.
amqp_pubsub.ampq_conn_options.password = "testpass"

# MQTT topics to forward to Google Cloud PubSub. Wildcards can have an assoicated name to be parsed and forwarded as metadata in the PubsubMessage, otherwise a default name will be used.
amqp_pubsub.routes = [route = "gateway/#", name = "gateways"], []

# Relaying messages from Google Cloud Pub/Sub to the MQTT clients
amqp_pubsub_reverse.subscription = "rabbitmq-proxy"
amqp_pubsub_reverse.topic = "to-gateway"
