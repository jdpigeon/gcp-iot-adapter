# Log level
logger.level = debug

# Path to Google service account JSON file.  Not used if oauth_jwt.use_default_service_account = true
oauth_jwt.secrets_file = "client_secrets.json"

# Use the default service account from metadata server if available (when running on GCE).
oauth_jwt.use_default_service_account = true

# AMQP exchange that the MQTT plugin is configured to use. You probably don't want to change this.
amqp_pubsub.ampq_exchange = "amq.topic"

# Project prefix for topics and subscriptions. Currently of the form projects/{project-id}/
amqp_pubsub.pubsub_project_prefix = "projects/your-gcp-project/"

# Disables creation of queues in RabbitMQ for the proxied routes. You probably don't want to change this.
amqp_pubsub.disable_queue_creation = false

# RabbitMQ host.
amqp_pubsub.ampq_conn_options.host = "localhost"

# RabbitMQ connection port.
amqp_pubsub.ampq_conn_options.port = 5672

# RabbitMQ username.
amqp_pubsub.ampq_conn_options.username = "test"

# RabbitMQ password.
amqp_pubsub.ampq_conn_options.password = "testpass"


# --- MQTT topics to forward to Google Cloud PubSub ---
# Note that if only 1 route exists, there needs to be an empty [] at the end.
# Also, there cannot be a space between the config and the brackets - this won't work: [..."gateways" ]
amqp_pubsub.routes = [route = "gateway/#", name = "gateways"], []

# More complex examples for routes:
# Additional routes can be added.  Example with a second route/topic:
# amqp_pubsub.routes = [route = "gateway/#", name = "gateways"], [route = "meter/+/gallons", name = "meter-data"]

# MQTT topics can also be named, with that name forwarded as a parameter in the PubSub attributes:
# amqp_pubsub.routes = [route = "meter/+gal/gallons", name = "meter-data"]
# This works like a normal mqtt subscription (meter/+/gallons), except that the "gal" parameter will be exposed in the pub/sub attributes, like this:
# {
#   "mqtt_topic": "meter/12345/gallons",
#   "mqtt_topic_params": "{\"gal\":\"12345\"}"
# }


# --- Sending messages to the MQTT-subscribed device ---
# Google Cloud Pub/Sub subscription name for messages intended to be relayed to the adapter.
amqp_pubsub.reverse_subscription = "gcp-iot-adapter-subscription"

# Google Cloud Pub/Sub topic for messages intended to be relayed to the adapter.
amqp_pubsub.reverse_topic = "to-gateway"
# When publishing to the MQTT device, you specify the MQTT topic by adding an  attribute to the Pub/Sub message,
# where Key = "topic" and Value is the actual MQTT topic

